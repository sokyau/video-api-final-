# docker-compose.yml
version: '3.8'

services:
  api:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./temp:/app/temp
    env_file: .env
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
    dns:
      - 8.8.8.8
      - 1.1.1.1
    depends_on:
      - redis
    command: python -m src.wsgi
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/system/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis_worker:
    build: .
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./temp:/app/temp
    env_file: .env
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
    dns:
      - 8.8.8.8
      - 1.1.1.1
    depends_on:
      - redis
      - api
    command: python -m src.redis_worker
    restart: unless-stopped

volumes:
  redis_data:
